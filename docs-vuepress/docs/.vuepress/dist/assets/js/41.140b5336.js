(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{337:function(n,t,s){"use strict";s.r(t);var a=s(3),e=Object(a.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"开发小程序插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发小程序插件"}},[n._v("#")]),n._v(" 开发小程序插件")]),n._v(" "),t("p",[n._v("插件，是可被添加到小程序内直接使用的功能组件，是对一组 js 接口、自定义组件或页面的封装，。开发者可以像开发小程序一样开发一个插件，供其他小程序使用。同时，小程序开发者可直接在小程序内使用插件，无需重复开发，但是在使用第三那个插件时，无法看到插件的代码。插件适合用来封装自己的功能或服务，提供给第三方小程序进行展示和使用。")]),n._v(" "),t("p",[n._v("开发小程序插件，大致要经过 开通插件功能，填写开发信息，提交审,发布，管理插件使用申请。同时在原生小程序使用插件，要先发出插件申请，等待使用申请通过，插件所有者还可以进行拒绝。\n原生小程序开发插件请移步：")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/framework/plugin/development.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("微信小程序插件开发"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("a",{attrs:{href:"https://opendocs.alipay.com/mini/plugin/create-plugin",target:"_blank",rel:"noopener noreferrer"}},[n._v("支付宝小程序插件开发"),t("OutboundLink")],1)])]),n._v(" "),t("p",[n._v("新建插件类型的项目后，如果创建示例项目，则项目中将包含三个目录：")]),n._v(" "),t("ul",[t("li",[n._v("plugin 目录：插件代码目录。")]),n._v(" "),t("li",[n._v("miniprogram 目录：放置一个小程序，用于调试插件。")]),n._v(" "),t("li",[n._v("doc 目录：用于放置插件开发文档。")])]),n._v(" "),t("p",[n._v("，插件会同时有多个线上版本，由使用插件的小程序决定具体使用的版本号。")]),n._v(" "),t("h3",{attrs:{id:"如何编写一个插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何编写一个插件"}},[n._v("#")]),n._v(" 如何编写一个插件")]),n._v(" "),t("p",[n._v("推荐使用 mpx 官方脚手架 @mpxjs/cli 创建一个小程序插件项目来快速的进入插件开发阶段，首先全局安装 @mpxjs/cli")]),n._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[n._v("npm i -g @mpxjs/cli\n")])])]),t("p",[n._v("然后使用 cli 初始化项目")]),n._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[n._v("mpx init\n")])])]),t("p",[n._v("我们以开发微信小程序插件为例，弹框会询问是否在当前文件目录下创建项目，选择yes，在问询步骤中选择插件模式("),t("strong",[n._v("注意跨平台输出选项需要选择否")]),n._v(")，是否使用 TypeScript，Babel，ESlint，Dll，单元测试这些可根据自身情况选择，同时注意"),t("strong",[n._v("由于插件需要 appid 才能工作，请填入一个 appid；")])]),n._v(" "),t("p",[n._v("全部选择完之后，会在当前文件夹生成小程序插件项目")]),n._v(" "),t("p",[t("strong",[n._v("文件目录")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("  build // mpx 构建文件\n  |-- build.js \n  |-- webpack.config.js\n  src\n  |-- miniprogram // 目录：放置一个小程序，用于调试插件。\n  |   --pages\n  |   --app.mpx // 引入插件调试\n  |-- plugin // 目录：插件代码目录\n  |   --components // 插件组件\n  |     -- list.mpx // 插件提供的列表组件\n  |   --pages // 插件页面\n  |     -- hello-page.mpx // 插件提供的页面\n  |   --plugin.json // 插件配置文件\n  test // 单元测试\n")])])]),t("p",[n._v("然后 "),t("strong",[n._v("npm i")]),n._v("  安装项目依赖")]),n._v(" "),t("p",[n._v("我们在 plugin/components/list.mpx 中开发插件中的列表组件，开发完成后，在plugin.json中我们向使用者小程序开放的所有自定义组件、页面和 js 接口，格式如下：")]),n._v(" "),t("p",[t("strong",[n._v("代码示例：")])]),n._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[n._v('{\n  "publicComponents": {\n    "list": "./components/list" // 使用mpx 中的webpack 路径引入规范\n  },\n  "pages": {\n    "hello-page": "./pages/hello-page"\n  }\n}\n')])])]),t("p",[n._v("运行 "),t("strong",[n._v("npm run build/watch")]),n._v(" 构建小程序产物，在 dist 文件夹下，生成最终的小程序插件产物，使用微信开发者工具，打开代码片段菜单栏，选择插件模式，打开 dist 文件夹。")]),n._v(" "),t("p",[n._v("我们可以像小程序一样预览和上传，但插件没有体验版，同时我们通常将 miniprogram 下的代码当做使用插件的小程序代码，来进行插件的调试和测试。")]),n._v(" "),t("p",[n._v("在开发完插件之后，我们可以上传插件代码，在小程序管理后台进行提交发布审核，审核通过后，就可以提供给第三方小程序使用我们的插件了。")]),n._v(" "),t("p",[n._v("使用 mpx 开发插件的优势相似于使用 mpx 开发小程序项目，可以使用 mpx 的各种增强特性以及跨平台输出的特性，提高开发效率和插件性能。")])])}),[],!1,null,null,null);t.default=e.exports}}]);