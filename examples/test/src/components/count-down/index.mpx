<template>
  <view class="count-down-component">
    <text wx:if="{{prefix}}" class="count-down-prefix">{{prefix}}</text>
    <text class="count-down-time">
      <text class="count-down-day2">{{currentTimeMetadata.day}}</text>
      <text class="count-down-separator2">天</text>
      <text class="count-down-hour2">{{currentTimeMetadata.hour}}</text>
      <text class="count-down-separator2">:</text>
      <text class="count-down-minute2">{{currentTimeMetadata.minute}}</text>
      <text class="count-down-separator2">:</text>
      <text class="count-down-second2">{{currentTimeMetadata.second}}</text>
    </text>
  </view>
</template>

<script>
  import { createComponent } from '@mpxjs/core'

  const SECONDSOFDAY = 24 * 60 * 60
  const SECONDSOFHOUR = 60 * 60
  const SECONDSOFMINUTE = 60
  const HOURSOFDAY = 24

  createComponent({
    options: {
      addGlobalClass: true,
      styleIsolation: 'shared'
    },
    properties: {
      prefix: {
        type: String,
        value: ''
      },
      remainingTime: {
        type: Number,
        value: 0
      }
    },
    data () {
      return {
        currentRemainingTime: this.remainingTime, // 单位：秒
        currentTimeMetadata: {}
      }
    },
    watch: {
      'remainingTime': function (to) {
        if (this.currentRemainingTime === -1) {
          this.currentRemainingTime = to
          this.clearTimer()
          this.computeTime()
          this.timer = setInterval(() => {
            this.computeTime()
          }, 1000)
        }
      }
    },
    lifetimes: {
      attached () {
        // 第一次进入页面先计算一次
        this.computeTime()
        this.timer = setInterval(() => {
          this.computeTime()
        }, 1000)
      },
      detached () {
        this.clearTimer()
      }
    },
    methods: {
      padZero (value) {
        return value < 10 ? `0${value}` : `${value}`
      },
      clearTimer () {
        if (this.timer) {
          clearInterval(this.timer)
        }
      },
      computeTime () {
        let currentRemainingTime = this.currentRemainingTime
        if (currentRemainingTime <= 0) {
          this.clearTimer()
          this.triggerEvent('finish')
          currentRemainingTime = 0
        }
        const day = parseInt(currentRemainingTime / SECONDSOFDAY, 10)
        const hour = parseInt((currentRemainingTime / SECONDSOFHOUR) % HOURSOFDAY, 10)
        const minute = parseInt((currentRemainingTime / SECONDSOFMINUTE) % SECONDSOFMINUTE, 10)
        const second = parseInt(currentRemainingTime % SECONDSOFMINUTE, 10)
        this.currentTimeMetadata = {
          day,
          hour: this.padZero(hour),
          minute: this.padZero(minute),
          second: this.padZero(second)
        }
        this.currentRemainingTime -= 1
      }
    }
  })
</script>

<style lang="stylus">
  .count-down-component
    display inline-block
    margin-bottom 5px
    .count-down-prefix
      white-space nowrap
      font-weight normal
      color #7D7D80
      font-size 10px
    .count-down-time
      font-size 0
    .count-down-day2,
    .count-down-hour2,
    .count-down-minute2,
    .count-down-second2,
    .count-down-separator2
      font-size 10px
      font-weight normal
      color #FF7E33
</style>

<script type="application/json">
  {
    "component": true
  }
</script>
