<template>
  <view class="button-box {{small && 'small-button'}}">
    <view class="bottom-btn" wx:style="{{ btnStyle }}">
      <view wx:if="{{swiperText.length}}" class="prefix-com">
        <swiper-text texts="{{swiperText}}"></swiper-text>
      </view>
      <button
        wx:if="{{ __mpx_mode__ === 'wx' && btnType === 'inviteSignUp' }}"
        class="btn-text"
        wx:style="{{badgeClass.textStyle}}"
        open-type="share"
        id="pageBtn"
      >{{text}}</button>
      <view
        wx:else
        class="btn-text"
        wx:style="{{badgeClass.textStyle}}"
        bindtap="onClick"
      >{{text}}</view>
      <view wx:if="{{badgeClass.rightBottom}}" class="{{badgeClass.rightBottom}}"></view>
    </view>
  </view>
</template>

<script>
  import { createComponent } from '@mpxjs/core'
  import { STATUS_MAP, MainBtnEventTypeMap } from '../../../common/js/constants'
  import { trackEvent } from '../../../common/js/Omega'
  const EVENT_SIGN_UP = 'agreementDialog' // 点击'免费预约'
  const EVENT_INVITE_SIGN_UP = 'inviteSignUp' // 点击'邀好友一起预约'
  const EVENT_INVITE_WORK = 'myInvitationDialog' // 点击'喊好友出车'
  const EVENT_WORK = 'goToWork' // 点击 立即出车
  const EVENT_JOIN_GROUP = 'joinGroup' // 加入司机群
  const EVENT_REGISTER = 'register' // 注册

  // 按钮的点击埋点
  const bottomBtnEventCKMap = {
    agreementDialog: 'wyc_mkt_ppyuyue_leader_main_appoint_btn_ck', // 点击'免费预约'
    inviteSignUp: 'wyc_mkt_ppyuyue_leader_main_share_btn_ck', // 点击'邀好友一起预约'
    myInvitationDialog: 'wyc_mkt_ppyuyue_leader_invite_chuche_btn_ck', // 点击'喊好友出车
    goToWork: 'wyc_mkt_ppyuyue_leader_main_chuche_btn_ck', // 点击 立即出车
    joinGroup: 'wyc_mkt_ppyuyue_leader_main_group_btn_ck', // 点击'加入司机群' 跳转二维码页面
    register: 'wyc_mkt_ppyuyue_leader_main_register_btn_ck' // 点击'注册司机' 跳转注册
  }
  createComponent({
    properties: {
      text: {
        type: String,
        value: ''
      },
      badgeClass: {
        type: Object,
        value: {}
      },
      status: {
        type: String,
        value: ''
      },
      actual: Number,
      small: Boolean,
      bgImg: String,
      eventType: String
    },
    created () {
    },
    computed: {
      btnType () {
        let eventName = EVENT_WORK
        if (this.eventType) {
          switch (this.eventType) {
            case MainBtnEventTypeMap.joinGroup:
              eventName = EVENT_JOIN_GROUP
              break
            case MainBtnEventTypeMap.remindFriendsToDrive:
              eventName = EVENT_INVITE_WORK
              break
            case MainBtnEventTypeMap.remindFriendsToJoin:
              eventName = EVENT_INVITE_SIGN_UP
              break
            case MainBtnEventTypeMap.register:
              eventName = EVENT_REGISTER
              break
            case MainBtnEventTypeMap.makeAppointment:
              eventName = EVENT_SIGN_UP
              break
          }
          return eventName
        }
        switch (this.status) {
          case STATUS_MAP.join_not_start:
            eventName = EVENT_INVITE_SIGN_UP
            break
          case STATUS_MAP.not_join:
            eventName = EVENT_SIGN_UP
            break
          case STATUS_MAP.share_work:
          case STATUS_MAP.ing_reward_friends:
            eventName = EVENT_INVITE_WORK
            break
        }
        return eventName
      },
      btnStyle () {
        if (this.bgImg) {
          return {
            'background-image': `url(${this.bgImg})`
          }
        }
        return {}
      },
      swiperText () {
        return this.badgeClass.rightTopText || []
      }
    },
    methods: {
      onClick () {
        this.triggerEvent('btnClick', this.btnType)
        const params = {}
        if (this.btnType === EVENT_WORK) {
          params.btn_type = this.actual >= 1 ? 1 : 2
        }
        const omegaKey = bottomBtnEventCKMap[this.btnType]
        omegaKey && trackEvent(omegaKey, params)
      }
    }
  })
</script>

<style lang="stylus">
@import "../../../common/stylus/mixin.styl"
.button-box
  font-size 0
  &.small-button
    .bottom-btn
      width vw(461)
      height vw(101)
    .btn-text
      line-height vw(72)
    .prefix-com
      top vw(-40)
  .bottom-btn
    position relative
    display inline-block
    width vw(520)
    height vw(143)
    background-size contain
    background-position center
    background-repeat no-repeat
    background-image url('https://dpubstatic.udache.com/static/dpubimg/bPZvG3TQo5/mian_btn_paopao.png')
  .prefix-com
    position absolute
    top vw(-24)
    // right vw(28)
    left 50%
    transform translateX(-50%)
    height vw(40)
    width vw(400)
    padding 0 vw(7)
    line-height vw(40)
    background-image linear-gradient(#fa7845, #f44031)
    border 1px solid rgba(255, 223, 156, 0.86)
    border-radius 10px
    box-sizing border-box
    &::after
      position absolute
      bottom vw(-7)
      right vw(30)
      display block
      content ' '
      width vw(16)
      height vw(7)
      background url('https://dpubstatic.udache.com/static/dpubimg/rAK5Wj3IU2/jiao_paopao.png') center 0 no-repeat
      background-size contain
  .hand
    position absolute
    z-index 1
    top vw(24)
    right vw(-18)
    width vw(144)
    height vw(127.5)
    background-size contain
    background-position center
    background-repeat no-repeat
    background-image url('https://dpubstatic.udache.com/static/dpubimg/19a31013-537e-4365-b04f-901ee685860b.gif')
  .btn-text
    outline none
    font-size vw(38)
    color #c12515
    text-align center
    line-height vw(120)
    font-weight bold
    background-color transparent
    &:after
      border none
</style>

<script  name="json">
  let usingComponents = {}
  if (__mpx_mode__ === 'wx') {
    usingComponents['swiper-text'] = '../../swiper-text/mpx'
  } else {
    usingComponents['swiper-text'] = '../../swiper-text/web'
  }
  module.exports = {
    'component': true,
    usingComponents
  }
</script>
