<template>
  <view class="comment-carousel">
    <view
      class="comment-carousel-content"
      wx:ref="commentSlide"
      wx:style="{{ commentAnimation }}"
    >
      <view
        class="carousel-item"
        wx:for="{{ list }}"
        wx:key="index"
      >
        <image wx:if="{{ __mpx_mode__ === 'wx'}}" class="comment-head" src="{{ item.avatar }}"></image>
        <img wx:elif="{{ __mpx_mode__ === 'web'}}" class="comment-head" src="{{ item.avatar }}" />
        <view class="comment-text">{{ item.comment }}</view>
      </view>
    </view>
  </view>
</template>

<script>
import { createComponent } from '@mpxjs/core'

createComponent({
  properties: {
    dataArray: {
      type: Array,
      value: []
    }
  },
  data () {
    return {
      list: [],
      commentAnimation: '',
      preTimer: null,
      initTimer: null,
      delayTimer: null
    }
  },
  attached () {
    this.list = [...(this.dataArray || [])]
    this.preData()
    this.$nextTick(() => {
      setTimeout(() => {
        this.preScroll()
      }, 200)
    })
  },
  detached () {
    this.clearPreTimer()
  },
  methods: {
    preData () {
      if (this.list.length > 0 && this.list.length < 6) {
        this.list = [
          ...this.list,
          ...this.dataArray
        ]
        return this.preData()
      }
      return true
    },
    preScroll (firstTime = true) {
      this.clearPreTimer()
      this.commentAnimation = ''
      if (!this.list || this.list.length <= 0) {
        return
      }
      this.$nextTick(() => {
        this.preTimer = setTimeout(() => {
          if (__mpx_mode__ === 'wx') {
            const _this = this
            wx.getSystemInfo({
              success (res) {
                _this.setAnimation(res.windowWidth, firstTime)
              }
            })
          } else {
            this.setAnimation(document.body.clientWidth || document.documentElement.clientWidth, firstTime)
          }
        }, 200)
      })
    },
    setAnimation (wWidth, firstTime) {
      this.$refs.commentSlide.fields({ size: true }, (res = {}) => {
        let elWidth = res.width || 0
        if (!elWidth && firstTime) {
          this.preScroll(false)
          return false
        }
        const scrollWidth = elWidth - wWidth
        const scrollTime = (scrollWidth / 40).toFixed(3) * 1000
        if (scrollWidth > 0 && scrollTime > 1000) {
          this.commentAnimation =
            `-webkit-animation: ${scrollTime}ms comment-carousel linear infinite normal; animation: ${scrollTime}ms comment-carousel linear infinite normal;`
        }
      }).exec()
    },
    clearPreTimer () {
      if (this.preTimer) {
        clearTimeout(this.preTimer)
        this.preTimer = null
      }
    }
  }
})
</script>

<style lang="stylus">
@import "../../../common/stylus/mixin.styl"
.comment-carousel
  position relative
  width 100%
  height 20px
  padding 5px 0
  overflow hidden
  @keyframes comment-carousel {
    0% {
      transform translate3d(0, 0, 0)
    }
    100% {
      transform translate3d(-100%, 0, 0)
    }
  }
  .comment-carousel-content
    position absolute
    left 0
    display flex
    padding-left vw(750)
  .carousel-item
    margin-right 70px
    flex 1 0 auto
    display flex
    height 20px
    padding 0 vw(10) 0 vw(3)
    border-radius 10px
    background rgba(0,0,0,0.3)
    align-items center
    justify-content flex-start
    &:last-of-type
      margin-right 0
  .comment-head
    flex 0 0 auto
    width 17px
    height 17px
    border-radius 50%
    background-color #fff
  .comment-text
    margin-left 3px
    color rgba(255,255,255,0.3)
    font-size 12px
    white-space nowrap
</style>
